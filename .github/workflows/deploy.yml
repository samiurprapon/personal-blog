name: 🚀 Cloudflare Pages Deploy

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: 🛠️ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔧 Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: ⚡ Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔒 Run Security Audit
        run: npm audit --audit-level=high

      - name: 🔨 Build the project
        env:
          VITE_APP_API_URL: ${{ secrets.VITE_APP_API_URL }}
        run: npm run build --if-present

      - name: 🚀 Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          packageManager: npm
          command: pages deploy ./dist --project-name=${{ secrets.CLOUDFLARE_PROJECT_NAME }}

      - name: 💻 Health Check
        run: curl -f ${{ secrets.VITE_APP_API_URL }}/health || exit 1

        # Use slack, email, or other notification service to alert the team of the deployment.
        # - name: 🚨 Notify team
        # run: echo "Deployment complete!"

      - name: 🧹 Cleanup
        run: rm -rf ./dist

      - name: ✅ Post-deploy verification
        run: echo "Deployment complete!"
